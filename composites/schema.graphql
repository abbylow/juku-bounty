type Profile
  @createModel(accountRelation: SINGLE, description: "User profile")
  @createIndex(fields: [{ path: "username" }])
  @createIndex(fields: [{ path: "author" }]) {
  displayName: String! @string(minLength: 1, maxLength: 100)
  username: ID!
  bio: String @string(maxLength: 160)
  pfp: String @string(maxLength: 100)
  topics: [Topic] @relationFrom(model: "ProfileTopic", property: "profileId")
  author: DID! @documentAccount
  createdAt: DateTime!
  editedAt: DateTime
  data: String @string(maxLength: 1000)
}

type Bounty
  @createModel(accountRelation: LIST, description: "Bounty")
  @createIndex(fields: [{ path: "title" }])
  @createIndex(fields: [{ path: "description" }])
  @createIndex(fields: [{ path: "author" }]) {
  title: String! @string(maxLength: 200)
  description: String @string(maxLength: 1000)
  numberOfRewarders: Int!
  rewardCurrency: String! @string(maxLength: 100)
  amountPerRewarder: Float!
  expiry: DateTime!
  topics: [Topic] @relationFrom(model: "BountyTopic", property: "bountyId")
  tags: [Tag] @relationFrom(model: "BountyTag", property: "bountyId")
  author: DID! @documentAccount
  createdAt: DateTime!
  editedAt: DateTime
  data: String @string(maxLength: 1000)
  context: String @string(maxLength: 100)
}

type Topic
  @createModel(accountRelation: LIST, description: "Topic")
  @createIndex(fields: [{ path: "slug" }]) {
  name: String! @string(minLength: 1, maxLength: 300)
  slug: ID! @string(minLength: 1, maxLength: 300)
  author: DID! @documentAccount
  createdAt: DateTime!
  editedAt: DateTime
  profiles: [Profile] @relationFrom(model: "ProfileTopic", property: "topicId")
  bounties: [Bounty] @relationFrom(model: "BountyTopic", property: "topicId")
  data: String @string(maxLength: 1000)
}

type ProfileTopic
  @createModel(accountRelation: LIST, description: "Join table for Profile and Topic") 
  @createIndex(fields: [{ path: "profileId" }])
  @createIndex(fields: [{ path: "topicId" }]) {
  profileId: StreamID! @documentReference(model: "Profile")
  topicId: StreamID! @documentReference(model: "Topic")
  profile: Profile! @relationDocument(property: "profileId")
  topic: Topic! @relationDocument(property: "topicId")
  active: Boolean! 
  createdAt: DateTime!
  editedAt: DateTime
}

type BountyTopic
  @createModel(accountRelation: LIST, description: "Join table for Bounty and Topic")
  @createIndex(fields: [{ path: "bountyId" }])
  @createIndex(fields: [{ path: "topicId" }]) {
  bountyId: StreamID! @documentReference(model: "Bounty")
  topicId: StreamID! @documentReference(model: "Topic")
  bounty: Profile! @relationDocument(property: "bountyId")
  topic: Topic! @relationDocument(property: "topicId")
  active: Boolean! 
  createdAt: DateTime!
  editedAt: DateTime
}

type Tag
  @createModel(accountRelation: LIST, description: "Tag")
  @createIndex(fields: [{ path: "slug" }]) {
  name: String! @string(minLength: 1, maxLength: 300)
  slug: ID! @string(minLength: 1, maxLength: 300)
  author: DID! @documentAccount
  createdAt: DateTime!
  editedAt: DateTime
  bounties: [Bounty] @relationFrom(model: "BountyTopic", property: "topicId")
  data: String @string(maxLength: 1000)
}

type BountyTag
  @createModel(accountRelation: LIST, description: "Join table for Bounty and Tag")
  @createIndex(fields: [{ path: "bountyId" }])
  @createIndex(fields: [{ path: "tagId" }]) {
  bountyId: StreamID! @documentReference(model: "Bounty")
  tagId: StreamID! @documentReference(model: "Tag")
  bounty: Bounty! @relationDocument(property: "bountyId")
  tag: Tag! @relationDocument(property: "tagId")
  active: Boolean! 
  createdAt: DateTime!
  editedAt: DateTime
}

type Follow 
  @createModel(accountRelation: LIST, description: "Uni-directional user relationship - follow")
  @createIndex(fields: [{ path: "author" }])
  @createIndex(fields: [{ path: "followee" }]) {
  author: DID! @documentAccount
  followee: DID! @accountReference
  active: Boolean!
  data: String @string(maxLength: 1000)
  createdAt: DateTime!
  editedAt: DateTime
}